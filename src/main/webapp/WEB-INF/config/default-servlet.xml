<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"	
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- 
        기본 패키지에서 @Conponent, @Service, @Repository와 같은 스트레오애노테이션을 제외하고(use-default-filters="false") @Controller로 표현된 클래스만 빈으로 등록하겠다.는 의미
    -->
    
	<context:component-scan base-package="edu.showcase" use-default-filters="false">
   	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
    <mvc:annotation-driven>    
	    <mvc:argument-resolvers>
	     	  <beans:bean class="edu.showcase.system.ux.UxWebArgumentResolver"/>
	    </mvc:argument-resolvers>
        
	    	<mvc:message-converters>
			        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			        	<beans:property name="supportedMediaTypes" value="application/json"/>
			        </beans:bean>
			        <beans:bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter">
			        	<beans:property name="supportedMediaTypes" value="application/xml"/>
			        </beans:bean>
	        </mvc:message-converters>
    </mvc:annotation-driven>
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order"  value="0" />		
	</beans:bean>
	
	<beans:bean class="edu.showcase.system.view.OrderedCustomBeanMappingViewResolver">
		<beans:property name="defaultView">
			<beans:bean class="edu.showcase.system.view.CustomDefaultView"/>
		</beans:property>
		<beans:property name="viewMapping">
			<beans:map>
				<beans:entry key="exception/defaultException">
					<beans:bean class="edu.showcase.system.view.DefaultExceptionView"/>
				</beans:entry>
<!-- 				<beans:entry key="exception/SimpleExceptionView"> -->
<!-- 					<beans:bean class="edu.showcase.system.view.SimpleExceptionView"/> -->
<!-- 				</beans:entry> -->
				<beans:entry key="exception/dataAccessException">
					<beans:bean class="edu.showcase.system.view.DataAccessExceptionView"/>
				</beans:entry>
			</beans:map>
		</beans:property>
	</beans:bean>
	
	
<!-- <beans:bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/> -->

<!-- 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> -->

<!-- 	<beans:bean id="multipartResolver" -->
<!-- 	        class="org.springframework.web.multipart.support.StandardServletMultipartResolver"> -->
<!-- 	</beans:bean> -->
	
	
<!-- 	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> -->
<!-- 	    <beans:property  name="mappedHandlers"> -->
<!-- 	        <beans:props> -->
<!-- 	            <beans:prop key="DataAccessException">error/dao</beans:prop> -->
<!-- 	            <beans:prop key="BusinessLogicException">error/login</beans:prop> -->
<!-- 	        </beans:props> -->
<!-- 	    </beans:property> -->
<!-- 	    <beans:property name="defaultErrorView" value="error/default"/> -->
<!--     </beans:bean> -->
    
 
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="defaultErrorView" value="exception/defaultException" />
		<beans:property name="exceptionMappings">
		 	<beans:props>
		 		<beans:prop key="DataAccessException">exception/dataAccessException</beans:prop>
		 	</beans:props>
		</beans:property>
	</beans:bean>
 
<!-- 		<beans:property name="warnLogCategory" value="CONTROLLER-WARNING" /> -->

</beans:beans>